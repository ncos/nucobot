TrajectoryPlannerROS:

# Robot Configuration Parameters - Kobuki
  max_vel_x: 0.5  # 0.55
  min_vel_x: 0.0 

  #? max_vel_y: 0.0  # diff drive robot
  #? min_vel_y: 0.0  # diff drive robot

  #? max_trans_vel: 0.5 # choose slightly less than the base's capability
  #? min_trans_vel: 0.1  # this is the min trans velocity when there is negligible rotational velocity
  #? trans_stopped_vel: 0.1

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_vel_theta: 5.0  # choose slightly less than the base's capability
  min_vel_theta: -5.0  # this is the min angular velocity when there is negligible translational velocity
  min_in_place_vel_theta: 0.4
  #? rot_stopped_vel: 0.4
  
  acc_lim_x: 1.0 # maximum is theoretically 2.0, but we 
  acc_lim_theta: 2.0
  acc_lim_y: 0.0      # diff drive robot

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.3  # 0.05
  xy_goal_tolerance: 0.05  # 0.10
  latch_xy_goal_tolerance: false

# Forward Simulation Parameters
  sim_time: 1.0       # 1.7
  sim_granularity: 0.025 #0.025 The step size, in meters, to take between points on a given  trajectory 
  vx_samples: 15      # 3 // After setting dwa to true, I'll also make sure to update the vx_samples parameter to something between 8 and 15 depending on the processing power available. This will allow for non-circular curves to be generated in the rollout. 
  vy_samples: 1       # diff drive robot, there is only one sample
  vtheta_samples: 20  # 20
  #? penalize_negative_x: false
  controller_frequency: 5.0

# Trajectory Scoring Parameters
  meter_scoring: true           # false  - Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default.
  pdist_scale: 1.2      # 0.6   - weighting for how much it should stick to the global path plan
  gdist_scale : 0.8      # 0.8   - weighting for how much it should attempt to reach its goal
  occdist_scale: 0.5            # 0.01   - weighting for how much the controller should avoid obstacles
  #? forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
  #heading_lookahead
  #heading_scoring 
  #heading_scoring_timestep
  dwa: false
  #? stop_time_buffer: 0.2         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
  #? scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  #? max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.1  # 0.05   - how far to travel before resetting oscillation flags

# Debugging
#  publish_traj_pc : true
#  publish_cost_grid_pc: true
#  global_frame_id: odom


# Differential-drive robot configuration - necessary?
  holonomic_robot: false
